Transposing the Bresenham line drawing algorithm
================================================

For the triangle fill routine we want to always iterate vertically along y-axis so the filling can be a simple drawing of a horizontal scanline between the two sides of the triangle.
When the sides of the triangle are steep the Bresenham algorithm naturally fits into this paradigm since it iterates along the long dimension of the line, which is the y-axis for steep sides.
However when the sides of the triangle are shallow, the Bresenham algorithm will want to iterate along the x-axis instead of the y-axis.
These notes are trying to figure out how the Cresenham algorithm can be modified to iterate along the short instead of the long axis of the line.


x is long dimension
-------------------
plot(6, 4)
| | | | | |0|
| | | | | | |
| | | | | | |
| | | | | | |
increment x		6	-->	5
increment acc	0	-->	-4
increment y		4	-->	3
plot(5, 3)
| | | | | |0|
| | | | |0| |
| | | | | | |
| | | | | | |
increment x		5	-->	4
increment acc	-4	-->	0
plot(4, 3)
| | | | | |0|
| | | |0|0| |
| | | | | | |
| | | | | | |
increment x		4	-->	3
increment acc	-4	-->	0
increment y		3	-->	2
plot(3, 2)
| | | | | |0|
| | | |0|0| |
| | |0| | | |
| | | | | | |
increment x		3	-->	2
increment acc	0	-->	-4
plot(2, 2)
| | | | | |0|
| | | |0|0| |
| |0|0| | | |
| | | | | | |
increment x		2	-->	1
increment acc	-4	-->	0
increment y		2	-->	1
plot(1, 1)
| | | | | |0|
| | | |0|0| |
| |0|0| | | |
|0| | | | | |



Desired operations
------------------
plot(6, 4)
| | | | | |0|
| | | | | | |
| | | | | | |
| | | | | | |
increment x		6	-->	5
increment acc	0	-->	-4
(inc y)
(plot)
increment x		5	-->	4
increment acc	-4	-->	0
increment y		4	-->	3
plot(4, 3)
| | | | | |0|
| | | |0|0| |
| | | | | | |
| | | | | | |
increment x		4	-->	3
increment acc	0	-->	-4
(inc y)
(plot)
increment x		3	-->	2
increment acc	-4	-->	0
increment y		3	-->	2
plot(2, 2)
| | | | | |0|
| | | |0|0| |
| |0|0| | | |
| | | | | | |
increment x		2	-->	1
increment acc	4	-->	-4
increment y		2	-->	1
plot(1, 1)
| | | | | |0|
| | | |0|0| |
| |0|0| | | |
|0| | | | | |
increment x
increment acc

negInc = 2 * shortDelta

acc = (2 * shortDelta) - longDelta

posInc = (2 * shortDelta) - 2 * (longDelta)

shortDelta == longDelta
-----------------------
acc = 2 * shortDelta - shortDelta = shortDelta i.e. positive

2 * shortDelta == longDelta
---------------------------
acc = longDelta - longDelta = 0

4 * shortDelta == longDelta
---------------------------
acc = 0.5 long Delta - long Delta = -ve.

So acc can start out negative


===========================
ultra shallow
p0 = 0, 0
p1 = 10, 2
longDiff = 10
shortDiff = 2

negIncrement = 2 * 2 = 4
acc = 4 - 10 = -6
posIncrement = 4 - (2 * 10) = -16

Plot(0, 0)
| | | | |
|x| | | |
inc x	-->	0 + 1 = 1
inc acc	-->	-6 + 4 = -2
Plot(1, 0)
| | | | |
|x|x| | |
inc x	--> 1 + 1 = 2
inc acc	--> -2 + 4 = 2
Plot(2, 0)
| | | | |
|x|x|x| |
inc x	--> 2 + 1 = 3
inc acc	--> 2 - 16 = -14
inc y	--> 0 + 1 = 1
Plot(3, 1)
| | | |x|
|x|x|x| |

!!! Before plotting anything !!!
check if acc is negative. If it is, then we need to increment x until acc turns positive
!!!! So only plot when acc is +ve !!!!
Once it's positive, that's when y should increment.